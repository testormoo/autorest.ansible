{
  "Modules": [
    {
      "ModuleName": "azure_rm_sql_databases",
      "ModuleNameAlt": "azure_rm_sql_database",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "\"{{ resource_group }}\"",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "zims-server",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database to be operated on (updated or created).",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "test-database",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "parameters",
          "NameAlt": "parameters",
          "Disposition": "dictionary",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "dict()",
          "Documentation": "The required parameters for creating or updating a database.",
          "DefaultValueSample": "\"{{ parameters }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "tags",
          "NameAlt": "tags",
          "Disposition": "parameters",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Resource tags.",
          "DefaultValueSample": "\"{{ tags }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "location",
          "NameAlt": "location",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "Resource location.",
          "DefaultValueSample": "\"{{ location }}\"",
          "DefaultValueTest": "westus",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "collation",
          "NameAlt": "collation",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The collation of the database. If createMode is not Default, this value is ignored.",
          "DefaultValueSample": "\"{{ collation }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "create_mode",
          "NameAlt": "create_mode",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Specifies the mode of database creation.\n\nDefault: regular database creation.\n\nCopy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.\n\nOnlineSecondary/NonReadableSecondary: creates a database as a (readable or nonreadable) secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.\n\nPointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.\n\nRecovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.\n\nRestore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.\n\nRestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.\n\nCopy, NonReadableSecondary, OnlineSecondary and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition. Possible values include: 'Copy', 'Default', 'NonReadableSecondary', 'OnlineSecondary', 'PointInTimeRestore', 'Recovery', 'Restore', 'RestoreLongTermRetentionBackup'",
          "DefaultValueSample": "\"{{ create_mode }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "source_database_id",
          "NameAlt": "source_database_id",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Conditional. If createMode is Copy, NonReadableSecondary, OnlineSecondary, PointInTimeRestore, Recovery, or Restore, then this value is required. Specifies the resource ID of the source database. If createMode is NonReadableSecondary or OnlineSecondary, the name of the source database must be the same as the new database being created.",
          "DefaultValueSample": "\"{{ source_database_id }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "source_database_deletion_date",
          "NameAlt": "source_database_deletion_date",
          "Disposition": "parameters",
          "Type": "datetime",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Conditional. If createMode is Restore and sourceDatabaseId is the deleted database's original resource id when it existed (as opposed to its current restorable dropped database id), then this value is required. Specifies the time that the database was deleted.",
          "DefaultValueSample": "\"{{ source_database_deletion_date }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "restore_point_in_time",
          "NameAlt": "restore_point_in_time",
          "Disposition": "parameters",
          "Type": "datetime",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Conditional. If createMode is PointInTimeRestore, this value is required. If createMode is Restore, this value is optional. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database. Must be greater than or equal to the source database's earliestRestoreDate value.",
          "DefaultValueSample": "\"{{ restore_point_in_time }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "recovery_services_recovery_point_resource_id",
          "NameAlt": "recovery_services_recovery_point_resource_id",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Conditional. If createMode is RestoreLongTermRetentionBackup, then this value is required. Specifies the resource ID of the recovery point to restore from.",
          "DefaultValueSample": "\"{{ recovery_services_recovery_point_resource_id }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "edition",
          "NameAlt": "edition",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The edition of the database. The DatabaseEditions enumeration contains all the valid editions. If createMode is NonReadableSecondary or OnlineSecondary, this value is ignored. To see possible values, query the capabilities API (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities) referred to by operationId: \"Capabilities_ListByLocation.\". Possible values include: 'Web', 'Business', 'Basic', 'Standard', 'Premium', 'Free', 'Stretch', 'DataWarehouse', 'System', 'System2'",
          "DefaultValueSample": "\"{{ edition }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "max_size_bytes",
          "NameAlt": "max_size_bytes",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The max size of the database expressed in bytes. If createMode is not Default, this value is ignored. To see possible values, query the capabilities API (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities) referred to by operationId: \"Capabilities_ListByLocation.\"",
          "DefaultValueSample": "\"{{ max_size_bytes }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "requested_service_objective_id",
          "NameAlt": "requested_service_objective_id",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The configured service level objective ID of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of currentServiceObjectiveId property. If requestedServiceObjectiveId and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveId overrides the value of requestedServiceObjectiveName. To see possible values, query the capabilities API (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities) referred to by operationId: \"Capabilities_ListByLocation.\"",
          "DefaultValueSample": "\"{{ requested_service_objective_id }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "requested_service_objective_name",
          "NameAlt": "requested_service_objective_name",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the configured service level objective of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of serviceLevelObjective property. To see possible values, query the capabilities API (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities) referred to by operationId: \"Capabilities_ListByLocation.\". Possible values include: 'Basic', 'S0', 'S1', 'S2', 'S3', 'P1', 'P2', 'P3', 'P4', 'P6', 'P11', 'P15', 'System', 'System2', 'ElasticPool'",
          "DefaultValueSample": "\"{{ requested_service_objective_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "elastic_pool_name",
          "NameAlt": "elastic_pool_name",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the elastic pool the database is in. If elasticPoolName and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveName is ignored. Not supported for DataWarehouse edition.",
          "DefaultValueSample": "\"{{ elastic_pool_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "read_scale",
          "NameAlt": "read_scale",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Conditional. If the database is a geo-secondary, readScale indicates whether read-only connections are allowed to this database or not. Not supported for DataWarehouse edition. Possible values include: 'Enabled', 'Disabled'",
          "DefaultValueSample": "\"{{ read_scale }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "sample_name",
          "NameAlt": "sample_name",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Indicates the name of the sample schema to apply when creating this database. If createMode is not Default, this value is ignored. Not supported for DataWarehouse edition. Possible values include: 'AdventureWorksLT'",
          "DefaultValueSample": "\"{{ sample_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "zone_redundant",
          "NameAlt": "zone_redundant",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.",
          "DefaultValueSample": "\"{{ zone_redundant }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "expand"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name"
          ]
        },
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "parameters"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "parameters"
          ]
        },
        {
          "Name": "delete",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name"
          ]
        }
      ],
      "TestPrerequisitesModule": "azure_rm_sql_server",
      "AssertStateVariable": "status",
      "AssertStateExpectedValue": "Online",
      "ModuleOperationNameUpper": "Databases",
      "ModuleOperationName": "databases",
      "ObjectName": "Database"
    },
    {
      "ModuleName": "azure_rm_sql_databases_facts",
      "ModuleNameAlt": "azure_rm_sql_databases_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the database to be retrieved.",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "expand",
          "NameAlt": "expand",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "A comma separated list of child objects to expand in the response. Possible properties: serviceTierAdvisors, transparentDataEncryption.",
          "DefaultValueSample": "\"{{ expand }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "filter",
          "NameAlt": "filter",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "An OData filter expression that describes a subset of databases to return.",
          "DefaultValueSample": "\"{{ filter }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "elastic_pool_name",
          "NameAlt": "elastic_pool_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the elastic pool to be retrieved.",
          "DefaultValueSample": "\"{{ elastic_pool_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "recommended_elastic_pool_name",
          "NameAlt": "recommended_elastic_pool_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the recommended elastic pool to be retrieved.",
          "DefaultValueSample": "\"{{ recommended_elastic_pool_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "list_metrics",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "filter"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "filter"
          ]
        },
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "expand"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name"
          ]
        },
        {
          "Name": "list_by_server",
          "Options": [
            "resource_group_name",
            "server_name",
            "expand",
            "filter"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        },
        {
          "Name": "list_metric_definitions",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name"
          ]
        },
        {
          "Name": "list_by_elastic_pool",
          "Options": [
            "resource_group_name",
            "server_name",
            "elastic_pool_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "elastic_pool_name"
          ]
        },
        {
          "Name": "list_by_recommended_elastic_pool",
          "Options": [
            "resource_group_name",
            "server_name",
            "recommended_elastic_pool_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "recommended_elastic_pool_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "Databases",
      "ModuleOperationName": "databases",
      "ObjectName": "Databases"
    },
    {
      "ModuleName": "azure_rm_sql_elasticpools",
      "ModuleNameAlt": "azure_rm_sql_elasticpool",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "\"{{ resource_group }}\"",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "zims-server",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "elastic_pool_name",
          "NameAlt": "name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the elastic pool to be operated on (updated or created).",
          "DefaultValueSample": "\"{{ elastic_pool_name }}\"",
          "DefaultValueTest": "test-elastic-pool",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "parameters",
          "NameAlt": "parameters",
          "Disposition": "dictionary",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "dict()",
          "Documentation": "The required parameters for creating or updating an elastic pool.",
          "DefaultValueSample": "\"{{ parameters }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "tags",
          "NameAlt": "tags",
          "Disposition": "parameters",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Resource tags.",
          "DefaultValueSample": "\"{{ tags }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "location",
          "NameAlt": "location",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "Resource location.",
          "DefaultValueSample": "\"{{ location }}\"",
          "DefaultValueTest": "westus",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "edition",
          "NameAlt": "edition",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The edition of the elastic pool. Possible values include: 'Basic', 'Standard', 'Premium'",
          "DefaultValueSample": "\"{{ edition }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "dtu",
          "NameAlt": "dtu",
          "Disposition": "parameters",
          "Type": "int",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The total shared DTU for the database elastic pool.",
          "DefaultValueSample": "\"{{ dtu }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "database_dtu_max",
          "NameAlt": "database_dtu_max",
          "Disposition": "parameters",
          "Type": "int",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The maximum DTU any one database can consume.",
          "DefaultValueSample": "\"{{ database_dtu_max }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "database_dtu_min",
          "NameAlt": "database_dtu_min",
          "Disposition": "parameters",
          "Type": "int",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The minimum DTU all databases are guaranteed.",
          "DefaultValueSample": "\"{{ database_dtu_min }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "storage_mb",
          "NameAlt": "storage_mb",
          "Disposition": "parameters",
          "Type": "int",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Gets storage limit for the database elastic pool in MB.",
          "DefaultValueSample": "\"{{ storage_mb }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "zone_redundant",
          "NameAlt": "zone_redundant",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Whether or not this database elastic pool is zone redundant, which means the replicas of this database will be spread across multiple availability zones.",
          "DefaultValueSample": "\"{{ zone_redundant }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "elastic_pool_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "elastic_pool_name"
          ]
        },
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "elastic_pool_name",
            "parameters"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "elastic_pool_name",
            "parameters"
          ]
        },
        {
          "Name": "delete",
          "Options": [
            "resource_group_name",
            "server_name",
            "elastic_pool_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "elastic_pool_name"
          ]
        }
      ],
      "TestPrerequisitesModule": "azure_rm_sql_server",
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "ElasticPools",
      "ModuleOperationName": "elastic_pools",
      "ObjectName": "ElasticPool"
    },
    {
      "ModuleName": "azure_rm_sql_elasticpools_facts",
      "ModuleNameAlt": "azure_rm_sql_elasticpools_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "elastic_pool_name",
          "NameAlt": "elastic_pool_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the elastic pool to be retrieved.",
          "DefaultValueSample": "\"{{ elastic_pool_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "filter",
          "NameAlt": "filter",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "An OData filter expression that describes a subset of metrics to return.",
          "DefaultValueSample": "\"{{ filter }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "list_metrics",
          "Options": [
            "resource_group_name",
            "server_name",
            "elastic_pool_name",
            "filter"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "elastic_pool_name",
            "filter"
          ]
        },
        {
          "Name": "list_metric_definitions",
          "Options": [
            "resource_group_name",
            "server_name",
            "elastic_pool_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "elastic_pool_name"
          ]
        },
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "elastic_pool_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "elastic_pool_name"
          ]
        },
        {
          "Name": "list_by_server",
          "Options": [
            "resource_group_name",
            "server_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "ElasticPools",
      "ModuleOperationName": "elastic_pools",
      "ObjectName": "ElasticPools"
    },
    {
      "ModuleName": "azure_rm_sql_elasticpoolactivities_facts",
      "ModuleNameAlt": "azure_rm_sql_elasticpoolactivities_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "elastic_pool_name",
          "NameAlt": "elastic_pool_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the elastic pool for which to get the current activity.",
          "DefaultValueSample": "\"{{ elastic_pool_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "list_by_elastic_pool",
          "Options": [
            "resource_group_name",
            "server_name",
            "elastic_pool_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "elastic_pool_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "ElasticPoolActivities",
      "ModuleOperationName": "elastic_pool_activities",
      "ObjectName": "ElasticPoolActivities"
    },
    {
      "ModuleName": "azure_rm_sql_elasticpooldatabaseactivities_facts",
      "ModuleNameAlt": "azure_rm_sql_elasticpooldatabaseactivities_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "elastic_pool_name",
          "NameAlt": "elastic_pool_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the elastic pool.",
          "DefaultValueSample": "\"{{ elastic_pool_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "list_by_elastic_pool",
          "Options": [
            "resource_group_name",
            "server_name",
            "elastic_pool_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "elastic_pool_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "ElasticPoolDatabaseActivities",
      "ModuleOperationName": "elastic_pool_database_activities",
      "ObjectName": "ElasticPoolDatabaseActivities"
    },
    {
      "ModuleName": "azure_rm_sql_recommendedelasticpools_facts",
      "ModuleNameAlt": "azure_rm_sql_recommendedelasticpools_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "recommended_elastic_pool_name",
          "NameAlt": "recommended_elastic_pool_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the recommended elastic pool to be retrieved.",
          "DefaultValueSample": "\"{{ recommended_elastic_pool_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "recommended_elastic_pool_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "recommended_elastic_pool_name"
          ]
        },
        {
          "Name": "list_metrics",
          "Options": [
            "resource_group_name",
            "server_name",
            "recommended_elastic_pool_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "recommended_elastic_pool_name"
          ]
        },
        {
          "Name": "list_by_server",
          "Options": [
            "resource_group_name",
            "server_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "RecommendedElasticPools",
      "ModuleOperationName": "recommended_elastic_pools",
      "ObjectName": "RecommendedElasticPools"
    },
    {
      "ModuleName": "azure_rm_sql_servicetieradvisors_facts",
      "ModuleNameAlt": "azure_rm_sql_servicetieradvisors_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of database.",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "service_tier_advisor_name",
          "NameAlt": "service_tier_advisor_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of service tier advisor.",
          "DefaultValueSample": "\"{{ service_tier_advisor_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "service_tier_advisor_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "service_tier_advisor_name"
          ]
        },
        {
          "Name": "list_by_database",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "ServiceTierAdvisors",
      "ModuleOperationName": "service_tier_advisors",
      "ObjectName": "ServiceTierAdvisors"
    },
    {
      "ModuleName": "azure_rm_sql_transparentdataencryptions",
      "ModuleNameAlt": "azure_rm_sql_transparentdataencryptions",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database for which setting the transparent data encryption applies.",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "transparent_data_encryption_name",
          "NameAlt": "transparent_data_encryption_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the transparent data encryption configuration.",
          "DefaultValueSample": "\"{{ transparent_data_encryption_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "parameters",
          "NameAlt": "parameters",
          "Disposition": "dictionary",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "dict()",
          "Documentation": "The required parameters for creating or updating transparent data encryption.",
          "DefaultValueSample": "\"{{ parameters }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "status",
          "NameAlt": "status",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The status of the database transparent data encryption. Possible values include: 'Enabled', 'Disabled'",
          "DefaultValueSample": "\"{{ status }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "transparent_data_encryption_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "transparent_data_encryption_name"
          ]
        },
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "transparent_data_encryption_name",
            "status"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "transparent_data_encryption_name"
          ]
        }
      ],
      "TestPrerequisitesModule": "",
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "TransparentDataEncryptions",
      "ModuleOperationName": "transparent_data_encryptions",
      "ObjectName": "TransparentDataEncryptions"
    },
    {
      "ModuleName": "azure_rm_sql_transparentdataencryptions_facts",
      "ModuleNameAlt": "azure_rm_sql_transparentdataencryptions_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database for which the transparent data encryption applies.",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "transparent_data_encryption_name",
          "NameAlt": "transparent_data_encryption_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the transparent data encryption configuration.",
          "DefaultValueSample": "\"{{ transparent_data_encryption_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "transparent_data_encryption_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "transparent_data_encryption_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "TransparentDataEncryptions",
      "ModuleOperationName": "transparent_data_encryptions",
      "ObjectName": "TransparentDataEncryptions"
    },
    {
      "ModuleName": "azure_rm_sql_transparentdataencryptionactivities_facts",
      "ModuleNameAlt": "azure_rm_sql_transparentdataencryptionactivities_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database for which the transparent data encryption applies.",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "transparent_data_encryption_name",
          "NameAlt": "transparent_data_encryption_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the transparent data encryption configuration.",
          "DefaultValueSample": "\"{{ transparent_data_encryption_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "list_by_configuration",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "transparent_data_encryption_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "transparent_data_encryption_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "TransparentDataEncryptionActivities",
      "ModuleOperationName": "transparent_data_encryption_activities",
      "ObjectName": "TransparentDataEncryptionActivities"
    },
    {
      "ModuleName": "azure_rm_sql_backuplongtermretentionpolicies",
      "ModuleNameAlt": "azure_rm_sql_backuplongtermretentionpolicies",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "backup_long_term_retention_policy_name",
          "NameAlt": "backup_long_term_retention_policy_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the backup long term retention policy",
          "DefaultValueSample": "\"{{ backup_long_term_retention_policy_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "state",
          "NameAlt": "state",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The status of the backup long term retention policy. Possible values include: 'Disabled', 'Enabled'",
          "DefaultValueSample": "\"{{ state }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "recovery_services_backup_policy_resource_id",
          "NameAlt": "recovery_services_backup_policy_resource_id",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The azure recovery services backup protection policy resource id",
          "DefaultValueSample": "\"{{ recovery_services_backup_policy_resource_id }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "backup_long_term_retention_policy_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "backup_long_term_retention_policy_name"
          ]
        },
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "backup_long_term_retention_policy_name",
            "state",
            "recovery_services_backup_policy_resource_id"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "backup_long_term_retention_policy_name",
            "state",
            "recovery_services_backup_policy_resource_id"
          ]
        }
      ],
      "TestPrerequisitesModule": "",
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "BackupLongTermRetentionPolicies",
      "ModuleOperationName": "backup_long_term_retention_policies",
      "ObjectName": "BackupLongTermRetentionPolicies"
    },
    {
      "ModuleName": "azure_rm_sql_backuplongtermretentionpolicies_facts",
      "ModuleNameAlt": "azure_rm_sql_backuplongtermretentionpolicies_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database.",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "backup_long_term_retention_policy_name",
          "NameAlt": "backup_long_term_retention_policy_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the backup long term retention policy",
          "DefaultValueSample": "\"{{ backup_long_term_retention_policy_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "backup_long_term_retention_policy_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "backup_long_term_retention_policy_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "BackupLongTermRetentionPolicies",
      "ModuleOperationName": "backup_long_term_retention_policies",
      "ObjectName": "BackupLongTermRetentionPolicies"
    },
    {
      "ModuleName": "azure_rm_sql_backuplongtermretentionvaults",
      "ModuleNameAlt": "azure_rm_sql_backuplongtermretentionvaults",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "backup_long_term_retention_vault_name",
          "NameAlt": "backup_long_term_retention_vault_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the backup long term retention vault",
          "DefaultValueSample": "\"{{ backup_long_term_retention_vault_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "recovery_services_vault_resource_id",
          "NameAlt": "recovery_services_vault_resource_id",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The azure recovery services vault resource id",
          "DefaultValueSample": "\"{{ recovery_services_vault_resource_id }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "backup_long_term_retention_vault_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "backup_long_term_retention_vault_name"
          ]
        },
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "backup_long_term_retention_vault_name",
            "recovery_services_vault_resource_id"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "backup_long_term_retention_vault_name",
            "recovery_services_vault_resource_id"
          ]
        }
      ],
      "TestPrerequisitesModule": "",
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "BackupLongTermRetentionVaults",
      "ModuleOperationName": "backup_long_term_retention_vaults",
      "ObjectName": "BackupLongTermRetentionVaults"
    },
    {
      "ModuleName": "azure_rm_sql_backuplongtermretentionvaults_facts",
      "ModuleNameAlt": "azure_rm_sql_backuplongtermretentionvaults_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "backup_long_term_retention_vault_name",
          "NameAlt": "backup_long_term_retention_vault_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the Azure SQL Server backup LongTermRetention vault",
          "DefaultValueSample": "\"{{ backup_long_term_retention_vault_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "backup_long_term_retention_vault_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "backup_long_term_retention_vault_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "BackupLongTermRetentionVaults",
      "ModuleOperationName": "backup_long_term_retention_vaults",
      "ObjectName": "BackupLongTermRetentionVaults"
    },
    {
      "ModuleName": "azure_rm_sql_restorepoints_facts",
      "ModuleNameAlt": "azure_rm_sql_restorepoints_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database to get available restore points.",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "list_by_database",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "RestorePoints",
      "ModuleOperationName": "restore_points",
      "ObjectName": "RestorePoints"
    },
    {
      "ModuleName": "azure_rm_sql_recoverabledatabases_facts",
      "ModuleNameAlt": "azure_rm_sql_recoverabledatabases_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the database",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name"
          ]
        },
        {
          "Name": "list_by_server",
          "Options": [
            "resource_group_name",
            "server_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "RecoverableDatabases",
      "ModuleOperationName": "recoverable_databases",
      "ObjectName": "RecoverableDatabases"
    },
    {
      "ModuleName": "azure_rm_sql_restorabledroppeddatabases_facts",
      "ModuleNameAlt": "azure_rm_sql_restorabledroppeddatabases_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "restorable_droppeded_database_id",
          "NameAlt": "restorable_droppeded_database_id",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The id of the deleted database in the form of databaseName,deletionTimeInFileTimeFormat",
          "DefaultValueSample": "\"{{ restorable_droppeded_database_id }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "restorable_droppeded_database_id"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "restorable_droppeded_database_id"
          ]
        },
        {
          "Name": "list_by_server",
          "Options": [
            "resource_group_name",
            "server_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "RestorableDroppedDatabases",
      "ModuleOperationName": "restorable_dropped_databases",
      "ObjectName": "RestorableDroppedDatabases"
    },
    {
      "ModuleName": "azure_rm_sql_capabilities_facts",
      "ModuleNameAlt": "azure_rm_sql_capabilities_facts",
      "Options": [
        {
          "Name": "location_id",
          "NameAlt": "location_id",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The location id whose capabilities are retrieved.",
          "DefaultValueSample": "\"{{ location_id }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "list_by_location",
          "Options": [
            "location_id"
          ],
          "RequiredOptions": [
            "location_id"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "Capabilities",
      "ModuleOperationName": "capabilities",
      "ObjectName": "Capabilities"
    },
    {
      "ModuleName": "azure_rm_sql_serverconnectionpolicies",
      "ModuleNameAlt": "azure_rm_sql_serverconnectionpolicies",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "connection_policy_name",
          "NameAlt": "connection_policy_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the connection policy.",
          "DefaultValueSample": "\"{{ connection_policy_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "connection_type",
          "NameAlt": "connection_type",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The server connection type. Possible values include: 'Default', 'Proxy', 'Redirect'",
          "DefaultValueSample": "\"{{ connection_type }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "connection_policy_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "connection_policy_name"
          ]
        },
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "connection_policy_name",
            "connection_type"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "connection_policy_name",
            "connection_type"
          ]
        }
      ],
      "TestPrerequisitesModule": "",
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "ServerConnectionPolicies",
      "ModuleOperationName": "server_connection_policies",
      "ObjectName": "ServerConnectionPolicies"
    },
    {
      "ModuleName": "azure_rm_sql_serverconnectionpolicies_facts",
      "ModuleNameAlt": "azure_rm_sql_serverconnectionpolicies_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "connection_policy_name",
          "NameAlt": "connection_policy_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the connection policy.",
          "DefaultValueSample": "\"{{ connection_policy_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "connection_policy_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "connection_policy_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "ServerConnectionPolicies",
      "ModuleOperationName": "server_connection_policies",
      "ObjectName": "ServerConnectionPolicies"
    },
    {
      "ModuleName": "azure_rm_sql_databasethreatdetectionpolicies",
      "ModuleNameAlt": "azure_rm_sql_databasethreatdetectionpolicies",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database for which database Threat Detection policy is defined.",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "security_alert_policy_name",
          "NameAlt": "security_alert_policy_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the security alert policy.",
          "DefaultValueSample": "\"{{ security_alert_policy_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "parameters",
          "NameAlt": "parameters",
          "Disposition": "dictionary",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "dict()",
          "Documentation": "The database Threat Detection policy.",
          "DefaultValueSample": "\"{{ parameters }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "location",
          "NameAlt": "location",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The geo-location where the resource lives",
          "DefaultValueSample": "\"{{ location }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "state",
          "NameAlt": "state",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "Specifies the state of the policy. If state is Enabled, storageEndpoint and storageAccountAccessKey are required. Possible values include: 'New', 'Enabled', 'Disabled'",
          "DefaultValueSample": "\"{{ state }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "disabled_alerts",
          "NameAlt": "disabled_alerts",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Specifies the semicolon-separated list of alerts that are disabled, or empty string to disable no alerts. Possible values: Sql_Injection; Sql_Injection_Vulnerability; Access_Anomaly; Usage_Anomaly.",
          "DefaultValueSample": "\"{{ disabled_alerts }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "email_addresses",
          "NameAlt": "email_addresses",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Specifies the semicolon-separated list of e-mail addresses to which the alert is sent.",
          "DefaultValueSample": "\"{{ email_addresses }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "email_account_admins",
          "NameAlt": "email_account_admins",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Specifies that the alert is sent to the account administrators. Possible values include: 'Enabled', 'Disabled'",
          "DefaultValueSample": "\"{{ email_account_admins }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "storage_endpoint",
          "NameAlt": "storage_endpoint",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs. If state is Enabled, storageEndpoint is required.",
          "DefaultValueSample": "\"{{ storage_endpoint }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "storage_account_access_key",
          "NameAlt": "storage_account_access_key",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Specifies the identifier key of the Threat Detection audit storage account. If state is Enabled, storageAccountAccessKey is required.",
          "DefaultValueSample": "\"{{ storage_account_access_key }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "retention_days",
          "NameAlt": "retention_days",
          "Disposition": "parameters",
          "Type": "int",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Specifies the number of days to keep in the Threat Detection audit logs.",
          "DefaultValueSample": "\"{{ retention_days }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "use_server_default",
          "NameAlt": "use_server_default",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Specifies whether to use the default server policy. Possible values include: 'Enabled', 'Disabled'",
          "DefaultValueSample": "\"{{ use_server_default }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "security_alert_policy_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "security_alert_policy_name"
          ]
        },
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "security_alert_policy_name",
            "parameters"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "security_alert_policy_name",
            "parameters"
          ]
        }
      ],
      "TestPrerequisitesModule": "",
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "DatabaseThreatDetectionPolicies",
      "ModuleOperationName": "database_threat_detection_policies",
      "ObjectName": "DatabaseThreatDetectionPolicies"
    },
    {
      "ModuleName": "azure_rm_sql_databasethreatdetectionpolicies_facts",
      "ModuleNameAlt": "azure_rm_sql_databasethreatdetectionpolicies_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database for which database Threat Detection policy is defined.",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "security_alert_policy_name",
          "NameAlt": "security_alert_policy_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the security alert policy.",
          "DefaultValueSample": "\"{{ security_alert_policy_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "security_alert_policy_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "security_alert_policy_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "DatabaseThreatDetectionPolicies",
      "ModuleOperationName": "database_threat_detection_policies",
      "ObjectName": "DatabaseThreatDetectionPolicies"
    },
    {
      "ModuleName": "azure_rm_sql_datamaskingpolicies",
      "ModuleNameAlt": "azure_rm_sql_datamaskingpolicies",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database.",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "data_masking_policy_name",
          "NameAlt": "data_masking_policy_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database for which the data masking rule applies.",
          "DefaultValueSample": "\"{{ data_masking_policy_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "data_masking_state",
          "NameAlt": "data_masking_state",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The state of the data masking policy. Possible values include: 'Disabled', 'Enabled'",
          "DefaultValueSample": "\"{{ data_masking_state }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "exempt_principals",
          "NameAlt": "exempt_principals",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The list of the exempt principals. Specifies the semicolon-separated list of database users for which the data masking policy does not apply. The specified users receive data results without masking for all of the database queries.",
          "DefaultValueSample": "\"{{ exempt_principals }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "data_masking_policy_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "data_masking_policy_name"
          ]
        },
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "data_masking_policy_name",
            "data_masking_state",
            "exempt_principals"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "data_masking_policy_name",
            "data_masking_state"
          ]
        }
      ],
      "TestPrerequisitesModule": "",
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "DataMaskingPolicies",
      "ModuleOperationName": "data_masking_policies",
      "ObjectName": "DataMaskingPolicies"
    },
    {
      "ModuleName": "azure_rm_sql_datamaskingpolicies_facts",
      "ModuleNameAlt": "azure_rm_sql_datamaskingpolicies_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database.",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "data_masking_policy_name",
          "NameAlt": "data_masking_policy_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database for which the data masking rule applies.",
          "DefaultValueSample": "\"{{ data_masking_policy_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "data_masking_policy_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "data_masking_policy_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "DataMaskingPolicies",
      "ModuleOperationName": "data_masking_policies",
      "ObjectName": "DataMaskingPolicies"
    },
    {
      "ModuleName": "azure_rm_sql_datamaskingrules",
      "ModuleNameAlt": "azure_rm_sql_datamaskingrules",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database.",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "data_masking_policy_name",
          "NameAlt": "data_masking_policy_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database for which the data masking rule applies.",
          "DefaultValueSample": "\"{{ data_masking_policy_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "data_masking_rule_name",
          "NameAlt": "data_masking_rule_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the data masking rule.",
          "DefaultValueSample": "\"{{ data_masking_rule_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "parameters",
          "NameAlt": "parameters",
          "Disposition": "dictionary",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "dict()",
          "Documentation": "The required parameters for creating or updating a data masking rule.",
          "DefaultValueSample": "\"{{ parameters }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "alias_name",
          "NameAlt": "alias_name",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The alias name. This is a legacy parameter and is no longer used.",
          "DefaultValueSample": "\"{{ alias_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "rule_state",
          "NameAlt": "rule_state",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The rule state. Used to delete a rule. To delete an existing rule, specify the schemaName, tableName, columnName, maskingFunction, and specify ruleState as disabled. However, if the rule doesn't already exist, the rule will be created with ruleState set to enabled, regardless of the provided value of ruleState. Possible values include: 'Disabled', 'Enabled'",
          "DefaultValueSample": "\"{{ rule_state }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "schema_name",
          "NameAlt": "schema_name",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The schema name on which the data masking rule is applied.",
          "DefaultValueSample": "\"{{ schema_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "table_name",
          "NameAlt": "table_name",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The table name on which the data masking rule is applied.",
          "DefaultValueSample": "\"{{ table_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "column_name",
          "NameAlt": "column_name",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The column name on which the data masking rule is applied.",
          "DefaultValueSample": "\"{{ column_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "masking_function",
          "NameAlt": "masking_function",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The masking function that is used for the data masking rule. Possible values include: 'Default', 'CCN', 'Email', 'Number', 'SSN', 'Text'",
          "DefaultValueSample": "\"{{ masking_function }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "number_from",
          "NameAlt": "number_from",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The numberFrom property of the masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored.",
          "DefaultValueSample": "\"{{ number_from }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "number_to",
          "NameAlt": "number_to",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The numberTo property of the data masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored.",
          "DefaultValueSample": "\"{{ number_to }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "prefix_size",
          "NameAlt": "prefix_size",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "If maskingFunction is set to Text, the number of characters to show unmasked in the beginning of the string. Otherwise, this parameter will be ignored.",
          "DefaultValueSample": "\"{{ prefix_size }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "suffix_size",
          "NameAlt": "suffix_size",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "If maskingFunction is set to Text, the number of characters to show unmasked at the end of the string. Otherwise, this parameter will be ignored.",
          "DefaultValueSample": "\"{{ suffix_size }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "replacement_string",
          "NameAlt": "replacement_string",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "If maskingFunction is set to Text, the character to use for masking the unexposed part of the string. Otherwise, this parameter will be ignored.",
          "DefaultValueSample": "\"{{ replacement_string }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "data_masking_policy_name",
            "data_masking_rule_name",
            "parameters"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "data_masking_policy_name",
            "data_masking_rule_name",
            "parameters"
          ]
        }
      ],
      "TestPrerequisitesModule": "",
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "DataMaskingRules",
      "ModuleOperationName": "data_masking_rules",
      "ObjectName": "DataMaskingRules"
    },
    {
      "ModuleName": "azure_rm_sql_datamaskingrules_facts",
      "ModuleNameAlt": "azure_rm_sql_datamaskingrules_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database.",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "data_masking_policy_name",
          "NameAlt": "data_masking_policy_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database for which the data masking rule applies.",
          "DefaultValueSample": "\"{{ data_masking_policy_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "list_by_database",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "data_masking_policy_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "data_masking_policy_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "DataMaskingRules",
      "ModuleOperationName": "data_masking_rules",
      "ObjectName": "DataMaskingRules"
    },
    {
      "ModuleName": "azure_rm_sql_firewallrules",
      "ModuleNameAlt": "azure_rm_sql_firewallrules",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "firewall_rule_name",
          "NameAlt": "firewall_rule_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the firewall rule.",
          "DefaultValueSample": "\"{{ firewall_rule_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "start_ip_address",
          "NameAlt": "start_ip_address",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The start IP address of the firewall rule. Must be IPv4 format. Use value '0.0.0.0' to represent all Azure-internal IP addresses.",
          "DefaultValueSample": "\"{{ start_ip_address }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "end_ip_address",
          "NameAlt": "end_ip_address",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress. Use value '0.0.0.0' to represent all Azure-internal IP addresses.",
          "DefaultValueSample": "\"{{ end_ip_address }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "firewall_rule_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "firewall_rule_name"
          ]
        },
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "firewall_rule_name",
            "start_ip_address",
            "end_ip_address"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "firewall_rule_name",
            "start_ip_address",
            "end_ip_address"
          ]
        },
        {
          "Name": "delete",
          "Options": [
            "resource_group_name",
            "server_name",
            "firewall_rule_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "firewall_rule_name"
          ]
        }
      ],
      "TestPrerequisitesModule": "",
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "FirewallRules",
      "ModuleOperationName": "firewall_rules",
      "ObjectName": "FirewallRules"
    },
    {
      "ModuleName": "azure_rm_sql_firewallrules_facts",
      "ModuleNameAlt": "azure_rm_sql_firewallrules_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "firewall_rule_name",
          "NameAlt": "firewall_rule_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the firewall rule.",
          "DefaultValueSample": "\"{{ firewall_rule_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "firewall_rule_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "firewall_rule_name"
          ]
        },
        {
          "Name": "list_by_server",
          "Options": [
            "resource_group_name",
            "server_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "FirewallRules",
      "ModuleOperationName": "firewall_rules",
      "ObjectName": "FirewallRules"
    },
    {
      "ModuleName": "azure_rm_sql_geobackuppolicies",
      "ModuleNameAlt": "azure_rm_sql_geobackuppolicies",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database.",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "geo_backup_policy_name",
          "NameAlt": "geo_backup_policy_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the geo backup policy.",
          "DefaultValueSample": "\"{{ geo_backup_policy_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "state",
          "NameAlt": "state",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The state of the geo backup policy. Possible values include: 'Disabled', 'Enabled'",
          "DefaultValueSample": "\"{{ state }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "geo_backup_policy_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "geo_backup_policy_name"
          ]
        },
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "geo_backup_policy_name",
            "state"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "geo_backup_policy_name",
            "state"
          ]
        }
      ],
      "TestPrerequisitesModule": "",
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "GeoBackupPolicies",
      "ModuleOperationName": "geo_backup_policies",
      "ObjectName": "GeoBackupPolicies"
    },
    {
      "ModuleName": "azure_rm_sql_geobackuppolicies_facts",
      "ModuleNameAlt": "azure_rm_sql_geobackuppolicies_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database.",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "geo_backup_policy_name",
          "NameAlt": "geo_backup_policy_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the geo backup policy.",
          "DefaultValueSample": "\"{{ geo_backup_policy_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "geo_backup_policy_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "geo_backup_policy_name"
          ]
        },
        {
          "Name": "list_by_database",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "GeoBackupPolicies",
      "ModuleOperationName": "geo_backup_policies",
      "ObjectName": "GeoBackupPolicies"
    },
    {
      "ModuleName": "azure_rm_sql_replicationlinks_facts",
      "ModuleNameAlt": "azure_rm_sql_replicationlinks_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database to get the link for.",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "link_id",
          "NameAlt": "link_id",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The replication link ID to be retrieved.",
          "DefaultValueSample": "\"{{ link_id }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "link_id"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "link_id"
          ]
        },
        {
          "Name": "list_by_database",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "ReplicationLinks",
      "ModuleOperationName": "replication_links",
      "ObjectName": "ReplicationLinks"
    },
    {
      "ModuleName": "azure_rm_sql_serverazureadadministrators",
      "ModuleNameAlt": "azure_rm_sql_serverazureadadministrators",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "administrator_name",
          "NameAlt": "administrator_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "Name of the server administrator resource.",
          "DefaultValueSample": "\"{{ administrator_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "properties",
          "NameAlt": "properties",
          "Disposition": "dictionary",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "dict()",
          "Documentation": "The required parameters for creating or updating an Active Directory Administrator.",
          "DefaultValueSample": "\"{{ properties }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "administrator_type",
          "NameAlt": "administrator_type",
          "Disposition": "properties",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The type of administrator.",
          "DefaultValueSample": "\"{{ administrator_type }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "login",
          "NameAlt": "login",
          "Disposition": "properties",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The server administrator login value.",
          "DefaultValueSample": "\"{{ login }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "sid",
          "NameAlt": "sid",
          "Disposition": "properties",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The server administrator Sid (Secure ID).",
          "DefaultValueSample": "\"{{ sid }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "tenant_id",
          "NameAlt": "tenant_id",
          "Disposition": "properties",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The server Active Directory Administrator tenant id.",
          "DefaultValueSample": "\"{{ tenant_id }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "administrator_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "administrator_name"
          ]
        },
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "administrator_name",
            "properties"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "administrator_name",
            "properties"
          ]
        },
        {
          "Name": "delete",
          "Options": [
            "resource_group_name",
            "server_name",
            "administrator_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "administrator_name"
          ]
        }
      ],
      "TestPrerequisitesModule": "",
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "ServerAzureADAdministrators",
      "ModuleOperationName": "server_azure_ad_administrators",
      "ObjectName": "ServerAzureADAdministrators"
    },
    {
      "ModuleName": "azure_rm_sql_serverazureadadministrators_facts",
      "ModuleNameAlt": "azure_rm_sql_serverazureadadministrators_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "administrator_name",
          "NameAlt": "administrator_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Name of the server administrator resource.",
          "DefaultValueSample": "\"{{ administrator_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "administrator_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "administrator_name"
          ]
        },
        {
          "Name": "list_by_server",
          "Options": [
            "resource_group_name",
            "server_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "ServerAzureADAdministrators",
      "ModuleOperationName": "server_azure_ad_administrators",
      "ObjectName": "ServerAzureADAdministrators"
    },
    {
      "ModuleName": "azure_rm_sql_servercommunicationlinks",
      "ModuleNameAlt": "azure_rm_sql_servercommunicationlinks",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "communication_link_name",
          "NameAlt": "communication_link_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server communication link.",
          "DefaultValueSample": "\"{{ communication_link_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "partner_server",
          "NameAlt": "partner_server",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the partner server.",
          "DefaultValueSample": "\"{{ partner_server }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "communication_link_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "communication_link_name"
          ]
        },
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "communication_link_name",
            "partner_server"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "communication_link_name",
            "partner_server"
          ]
        },
        {
          "Name": "delete",
          "Options": [
            "resource_group_name",
            "server_name",
            "communication_link_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "communication_link_name"
          ]
        }
      ],
      "TestPrerequisitesModule": "",
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "ServerCommunicationLinks",
      "ModuleOperationName": "server_communication_links",
      "ObjectName": "ServerCommunicationLinks"
    },
    {
      "ModuleName": "azure_rm_sql_servercommunicationlinks_facts",
      "ModuleNameAlt": "azure_rm_sql_servercommunicationlinks_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "communication_link_name",
          "NameAlt": "communication_link_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the server communication link.",
          "DefaultValueSample": "\"{{ communication_link_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "communication_link_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "communication_link_name"
          ]
        },
        {
          "Name": "list_by_server",
          "Options": [
            "resource_group_name",
            "server_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "ServerCommunicationLinks",
      "ModuleOperationName": "server_communication_links",
      "ObjectName": "ServerCommunicationLinks"
    },
    {
      "ModuleName": "azure_rm_sql_serviceobjectives_facts",
      "ModuleNameAlt": "azure_rm_sql_serviceobjectives_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "service_objective_name",
          "NameAlt": "service_objective_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the service objective to retrieve.",
          "DefaultValueSample": "\"{{ service_objective_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "service_objective_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "service_objective_name"
          ]
        },
        {
          "Name": "list_by_server",
          "Options": [
            "resource_group_name",
            "server_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "ServiceObjectives",
      "ModuleOperationName": "service_objectives",
      "ObjectName": "ServiceObjectives"
    },
    {
      "ModuleName": "azure_rm_sql_servers",
      "ModuleNameAlt": "azure_rm_sql_server",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group }}\"",
          "DefaultValueTest": "\"{{ resource_group }}\"",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "zimsserver",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "parameters",
          "NameAlt": "parameters",
          "Disposition": "dictionary",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "dict()",
          "Documentation": "The requested server resource state.",
          "DefaultValueSample": "\"{{ parameters }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "location",
          "NameAlt": "location",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "Resource location.",
          "DefaultValueSample": "\"{{ location }}\"",
          "DefaultValueTest": "westus",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "tags",
          "NameAlt": "tags",
          "Disposition": "parameters",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Resource tags.",
          "DefaultValueSample": "\"{{ tags }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "identity",
          "NameAlt": "identity",
          "Disposition": "parameters",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The Azure Active Directory identity of the server.",
          "DefaultValueSample": "\"{{ identity }}\"",
          "DefaultValueTest": "",
          "SubOptions": [
            {
              "Name": "type",
              "NameAlt": "type",
              "Disposition": "default",
              "Type": "str",
              "IsList": false,
              "Required": "False",
              "VariableValue": "None",
              "Documentation": "The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource. Possible values include: 'SystemAssigned'",
              "DefaultValueSample": "\"{{ type }}\"",
              "DefaultValueTest": "",
              "SubOptions": [],
              "RequiredCount": 0
            }
          ],
          "RequiredCount": 0
        },
        {
          "Name": "administrator_login",
          "NameAlt": "administrator_login",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Administrator username for the server. Once created it cannot be changed.",
          "DefaultValueSample": "\"{{ administrator_login }}\"",
          "DefaultValueTest": "mylogin",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "administrator_login_password",
          "NameAlt": "administrator_login_password",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The administrator login password (required for server creation).",
          "DefaultValueSample": "\"{{ administrator_login_password }}\"",
          "DefaultValueTest": "Testpasswordxyz12!",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "version",
          "NameAlt": "version",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The version of the server.",
          "DefaultValueSample": "\"{{ version }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        },
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "parameters"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "parameters"
          ]
        },
        {
          "Name": "delete",
          "Options": [
            "resource_group_name",
            "server_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        }
      ],
      "TestPrerequisitesModule": "",
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "Servers",
      "ModuleOperationName": "servers",
      "ObjectName": "Server"
    },
    {
      "ModuleName": "azure_rm_sql_servers_facts",
      "ModuleNameAlt": "azure_rm_sql_servers_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        },
        {
          "Name": "list_by_resource_group",
          "Options": [
            "resource_group_name"
          ],
          "RequiredOptions": [
            "resource_group_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "Servers",
      "ModuleOperationName": "servers",
      "ObjectName": "Servers"
    },
    {
      "ModuleName": "azure_rm_sql_serverusages_facts",
      "ModuleNameAlt": "azure_rm_sql_serverusages_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "list_by_server",
          "Options": [
            "resource_group_name",
            "server_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "ServerUsages",
      "ModuleOperationName": "server_usages",
      "ObjectName": "ServerUsages"
    },
    {
      "ModuleName": "azure_rm_sql_databaseusages_facts",
      "ModuleNameAlt": "azure_rm_sql_databaseusages_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database.",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "list_by_database",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "DatabaseUsages",
      "ModuleOperationName": "database_usages",
      "ObjectName": "DatabaseUsages"
    },
    {
      "ModuleName": "azure_rm_sql_databaseblobauditingpolicies",
      "ModuleNameAlt": "azure_rm_sql_databaseblobauditingpolicies",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database for which the blob auditing policy will be defined.",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "blob_auditing_policy_name",
          "NameAlt": "blob_auditing_policy_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the blob auditing policy.",
          "DefaultValueSample": "\"{{ blob_auditing_policy_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "parameters",
          "NameAlt": "parameters",
          "Disposition": "dictionary",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "dict()",
          "Documentation": "The database blob auditing policy.",
          "DefaultValueSample": "\"{{ parameters }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "state",
          "NameAlt": "state",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "Specifies the state of the policy. If state is Enabled, storageEndpoint and storageAccountAccessKey are required. Possible values include: 'Enabled', 'Disabled'",
          "DefaultValueSample": "\"{{ state }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "storage_endpoint",
          "NameAlt": "storage_endpoint",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint is required.",
          "DefaultValueSample": "\"{{ storage_endpoint }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "storage_account_access_key",
          "NameAlt": "storage_account_access_key",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Specifies the identifier key of the auditing storage account. If state is Enabled, storageAccountAccessKey is required.",
          "DefaultValueSample": "\"{{ storage_account_access_key }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "retention_days",
          "NameAlt": "retention_days",
          "Disposition": "parameters",
          "Type": "int",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Specifies the number of days to keep in the audit logs.",
          "DefaultValueSample": "\"{{ retention_days }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "audit_actions_and_groups",
          "NameAlt": "audit_actions_and_groups",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": true,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Specifies the Actions and Actions-Groups to audit.",
          "DefaultValueSample": "\"{{ audit_actions_and_groups }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "storage_account_subscription_id",
          "NameAlt": "storage_account_subscription_id",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Specifies the blob storage subscription Id.",
          "DefaultValueSample": "\"{{ storage_account_subscription_id }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "is_storage_secondary_key_in_use",
          "NameAlt": "is_storage_secondary_key_in_use",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Specifies whether storageAccountAccessKey value is the storage’s secondary key.",
          "DefaultValueSample": "\"{{ is_storage_secondary_key_in_use }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "blob_auditing_policy_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "blob_auditing_policy_name"
          ]
        },
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "blob_auditing_policy_name",
            "parameters"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "blob_auditing_policy_name",
            "parameters"
          ]
        }
      ],
      "TestPrerequisitesModule": "",
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "DatabaseBlobAuditingPolicies",
      "ModuleOperationName": "database_blob_auditing_policies",
      "ObjectName": "DatabaseBlobAuditingPolicies"
    },
    {
      "ModuleName": "azure_rm_sql_databaseblobauditingpolicies_facts",
      "ModuleNameAlt": "azure_rm_sql_databaseblobauditingpolicies_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database for which the blob audit policy is defined.",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "blob_auditing_policy_name",
          "NameAlt": "blob_auditing_policy_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the blob auditing policy.",
          "DefaultValueSample": "\"{{ blob_auditing_policy_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "blob_auditing_policy_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "blob_auditing_policy_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "DatabaseBlobAuditingPolicies",
      "ModuleOperationName": "database_blob_auditing_policies",
      "ObjectName": "DatabaseBlobAuditingPolicies"
    },
    {
      "ModuleName": "azure_rm_sql_encryptionprotectors",
      "ModuleNameAlt": "azure_rm_sql_encryptionprotectors",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "encryption_protector_name",
          "NameAlt": "encryption_protector_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the encryption protector to be updated.",
          "DefaultValueSample": "\"{{ encryption_protector_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "parameters",
          "NameAlt": "parameters",
          "Disposition": "dictionary",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "dict()",
          "Documentation": "The requested encryption protector resource state.",
          "DefaultValueSample": "\"{{ parameters }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "kind",
          "NameAlt": "kind",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Kind of encryption protector. This is metadata used for the Azure portal experience.",
          "DefaultValueSample": "\"{{ kind }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "server_key_name",
          "NameAlt": "server_key_name",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the server key.",
          "DefaultValueSample": "\"{{ server_key_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "server_key_type",
          "NameAlt": "server_key_type",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The encryption protector type like 'ServiceManaged', 'AzureKeyVault'. Possible values include: 'ServiceManaged', 'AzureKeyVault'",
          "DefaultValueSample": "\"{{ server_key_type }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "encryption_protector_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "encryption_protector_name"
          ]
        },
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "encryption_protector_name",
            "parameters"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "encryption_protector_name",
            "parameters"
          ]
        }
      ],
      "TestPrerequisitesModule": "",
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "EncryptionProtectors",
      "ModuleOperationName": "encryption_protectors",
      "ObjectName": "EncryptionProtectors"
    },
    {
      "ModuleName": "azure_rm_sql_encryptionprotectors_facts",
      "ModuleNameAlt": "azure_rm_sql_encryptionprotectors_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "encryption_protector_name",
          "NameAlt": "encryption_protector_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the encryption protector to be retrieved.",
          "DefaultValueSample": "\"{{ encryption_protector_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "encryption_protector_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "encryption_protector_name"
          ]
        },
        {
          "Name": "list_by_server",
          "Options": [
            "resource_group_name",
            "server_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "EncryptionProtectors",
      "ModuleOperationName": "encryption_protectors",
      "ObjectName": "EncryptionProtectors"
    },
    {
      "ModuleName": "azure_rm_sql_failovergroups",
      "ModuleNameAlt": "azure_rm_sql_failovergroups",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server containing the failover group.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "failover_group_name",
          "NameAlt": "failover_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the failover group.",
          "DefaultValueSample": "\"{{ failover_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "parameters",
          "NameAlt": "parameters",
          "Disposition": "dictionary",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "dict()",
          "Documentation": "The failover group parameters.",
          "DefaultValueSample": "\"{{ parameters }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "tags",
          "NameAlt": "tags",
          "Disposition": "parameters",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Resource tags.",
          "DefaultValueSample": "\"{{ tags }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "read_write_endpoint",
          "NameAlt": "read_write_endpoint",
          "Disposition": "parameters",
          "Type": "dict",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "Read-write endpoint of the failover group instance.",
          "DefaultValueSample": "\"{{ read_write_endpoint }}\"",
          "DefaultValueTest": "",
          "SubOptions": [
            {
              "Name": "failover_policy",
              "NameAlt": "failover_policy",
              "Disposition": "default",
              "Type": "str",
              "IsList": false,
              "Required": "True",
              "VariableValue": "None",
              "Documentation": "Failover policy of the read-write endpoint for the failover group. If failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is required. Possible values include: 'Manual', 'Automatic'",
              "DefaultValueSample": "\"{{ failover_policy }}\"",
              "DefaultValueTest": "",
              "SubOptions": [],
              "RequiredCount": 0
            },
            {
              "Name": "failover_with_data_loss_grace_period_minutes",
              "NameAlt": "failover_with_data_loss_grace_period_minutes",
              "Disposition": "default",
              "Type": "int",
              "IsList": false,
              "Required": "False",
              "VariableValue": "None",
              "Documentation": "Grace period before failover with data loss is attempted for the read-write endpoint. If failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is required.",
              "DefaultValueSample": "\"{{ failover_with_data_loss_grace_period_minutes }}\"",
              "DefaultValueTest": "",
              "SubOptions": [],
              "RequiredCount": 0
            }
          ],
          "RequiredCount": 0
        },
        {
          "Name": "read_only_endpoint",
          "NameAlt": "read_only_endpoint",
          "Disposition": "parameters",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Read-only endpoint of the failover group instance.",
          "DefaultValueSample": "\"{{ read_only_endpoint }}\"",
          "DefaultValueTest": "",
          "SubOptions": [
            {
              "Name": "failover_policy",
              "NameAlt": "failover_policy",
              "Disposition": "default",
              "Type": "str",
              "IsList": false,
              "Required": "False",
              "VariableValue": "None",
              "Documentation": "Failover policy of the read-only endpoint for the failover group. Possible values include: 'Disabled', 'Enabled'",
              "DefaultValueSample": "\"{{ failover_policy }}\"",
              "DefaultValueTest": "",
              "SubOptions": [],
              "RequiredCount": 0
            }
          ],
          "RequiredCount": 0
        },
        {
          "Name": "partner_servers",
          "NameAlt": "partner_servers",
          "Disposition": "parameters",
          "Type": "dict",
          "IsList": true,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "List of partner server information for the failover group.",
          "DefaultValueSample": "\"{{ partner_servers }}\"",
          "DefaultValueTest": "",
          "SubOptions": [
            {
              "Name": "id",
              "NameAlt": "id",
              "Disposition": "default",
              "Type": "str",
              "IsList": false,
              "Required": "True",
              "VariableValue": "None",
              "Documentation": "Resource identifier of the partner server.",
              "DefaultValueSample": "\"{{ id }}\"",
              "DefaultValueTest": "",
              "SubOptions": [],
              "RequiredCount": 0
            }
          ],
          "RequiredCount": 0
        },
        {
          "Name": "databases",
          "NameAlt": "databases",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": true,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "List of databases in the failover group.",
          "DefaultValueSample": "\"{{ databases }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "failover_group_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "failover_group_name"
          ]
        },
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "failover_group_name",
            "parameters"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "failover_group_name",
            "parameters"
          ]
        },
        {
          "Name": "delete",
          "Options": [
            "resource_group_name",
            "server_name",
            "failover_group_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "failover_group_name"
          ]
        }
      ],
      "TestPrerequisitesModule": "",
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "FailoverGroups",
      "ModuleOperationName": "failover_groups",
      "ObjectName": "FailoverGroups"
    },
    {
      "ModuleName": "azure_rm_sql_failovergroups_facts",
      "ModuleNameAlt": "azure_rm_sql_failovergroups_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server containing the failover group.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "failover_group_name",
          "NameAlt": "failover_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the failover group.",
          "DefaultValueSample": "\"{{ failover_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "failover_group_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "failover_group_name"
          ]
        },
        {
          "Name": "list_by_server",
          "Options": [
            "resource_group_name",
            "server_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "FailoverGroups",
      "ModuleOperationName": "failover_groups",
      "ObjectName": "FailoverGroups"
    },
    {
      "ModuleName": "azure_rm_sql_serverkeys",
      "ModuleNameAlt": "azure_rm_sql_serverkeys",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "key_name",
          "NameAlt": "key_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server key to be operated on (updated or created). The key name is required to be in the format of 'vault_key_version'. For example, if the keyId is https://YourVaultName.vault.azure.net/keys/YourKeyName/01234567890123456789012345678901, then the server key name should be formatted as: YourVaultName_YourKeyName_01234567890123456789012345678901",
          "DefaultValueSample": "\"{{ key_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "parameters",
          "NameAlt": "parameters",
          "Disposition": "dictionary",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "dict()",
          "Documentation": "The requested server key resource state.",
          "DefaultValueSample": "\"{{ parameters }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "kind",
          "NameAlt": "kind",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Kind of encryption protector. This is metadata used for the Azure portal experience.",
          "DefaultValueSample": "\"{{ kind }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "server_key_type",
          "NameAlt": "server_key_type",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The server key type like 'ServiceManaged', 'AzureKeyVault'. Possible values include: 'ServiceManaged', 'AzureKeyVault'",
          "DefaultValueSample": "\"{{ server_key_type }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "uri",
          "NameAlt": "uri",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The URI of the server key.",
          "DefaultValueSample": "\"{{ uri }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "thumbprint",
          "NameAlt": "thumbprint",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Thumbprint of the server key.",
          "DefaultValueSample": "\"{{ thumbprint }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "creation_date",
          "NameAlt": "creation_date",
          "Disposition": "parameters",
          "Type": "datetime",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The server key creation date.",
          "DefaultValueSample": "\"{{ creation_date }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "key_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "key_name"
          ]
        },
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "key_name",
            "parameters"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "key_name",
            "parameters"
          ]
        },
        {
          "Name": "delete",
          "Options": [
            "resource_group_name",
            "server_name",
            "key_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "key_name"
          ]
        }
      ],
      "TestPrerequisitesModule": "",
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "ServerKeys",
      "ModuleOperationName": "server_keys",
      "ObjectName": "ServerKeys"
    },
    {
      "ModuleName": "azure_rm_sql_serverkeys_facts",
      "ModuleNameAlt": "azure_rm_sql_serverkeys_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "key_name",
          "NameAlt": "key_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the server key to be retrieved.",
          "DefaultValueSample": "\"{{ key_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "key_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "key_name"
          ]
        },
        {
          "Name": "list_by_server",
          "Options": [
            "resource_group_name",
            "server_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "ServerKeys",
      "ModuleOperationName": "server_keys",
      "ObjectName": "ServerKeys"
    },
    {
      "ModuleName": "azure_rm_sql_syncagents",
      "ModuleNameAlt": "azure_rm_sql_syncagents",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server on which the sync agent is hosted.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "sync_agent_name",
          "NameAlt": "sync_agent_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the sync agent.",
          "DefaultValueSample": "\"{{ sync_agent_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "sync_database_id",
          "NameAlt": "sync_database_id",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "ARM resource id of the sync database in the sync agent.",
          "DefaultValueSample": "\"{{ sync_database_id }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "sync_agent_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "sync_agent_name"
          ]
        },
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "sync_agent_name",
            "sync_database_id"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "sync_agent_name"
          ]
        },
        {
          "Name": "delete",
          "Options": [
            "resource_group_name",
            "server_name",
            "sync_agent_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "sync_agent_name"
          ]
        }
      ],
      "TestPrerequisitesModule": "",
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "SyncAgents",
      "ModuleOperationName": "sync_agents",
      "ObjectName": "SyncAgents"
    },
    {
      "ModuleName": "azure_rm_sql_syncagents_facts",
      "ModuleNameAlt": "azure_rm_sql_syncagents_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server on which the sync agent is hosted.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "sync_agent_name",
          "NameAlt": "sync_agent_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the sync agent.",
          "DefaultValueSample": "\"{{ sync_agent_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "sync_agent_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "sync_agent_name"
          ]
        },
        {
          "Name": "list_linked_databases",
          "Options": [
            "resource_group_name",
            "server_name",
            "sync_agent_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "sync_agent_name"
          ]
        },
        {
          "Name": "list_by_server",
          "Options": [
            "resource_group_name",
            "server_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "SyncAgents",
      "ModuleOperationName": "sync_agents",
      "ObjectName": "SyncAgents"
    },
    {
      "ModuleName": "azure_rm_sql_syncgroups",
      "ModuleNameAlt": "azure_rm_sql_syncgroups",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database on which the sync group is hosted.",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "sync_group_name",
          "NameAlt": "sync_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the sync group.",
          "DefaultValueSample": "\"{{ sync_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "parameters",
          "NameAlt": "parameters",
          "Disposition": "dictionary",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "dict()",
          "Documentation": "The requested sync group resource state.",
          "DefaultValueSample": "\"{{ parameters }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "interval",
          "NameAlt": "interval",
          "Disposition": "parameters",
          "Type": "int",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Sync interval of the sync group.",
          "DefaultValueSample": "\"{{ interval }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "conflict_resolution_policy",
          "NameAlt": "conflict_resolution_policy",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Conflict resolution policy of the sync group. Possible values include: 'HubWin', 'MemberWin'",
          "DefaultValueSample": "\"{{ conflict_resolution_policy }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "sync_database_id",
          "NameAlt": "sync_database_id",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "ARM resource id of the sync database in the sync group.",
          "DefaultValueSample": "\"{{ sync_database_id }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "hub_database_user_name",
          "NameAlt": "hub_database_user_name",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "User name for the sync group hub database credential.",
          "DefaultValueSample": "\"{{ hub_database_user_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "hub_database_password",
          "NameAlt": "hub_database_password",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Password for the sync group hub database credential.",
          "DefaultValueSample": "\"{{ hub_database_password }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "schema",
          "NameAlt": "schema",
          "Disposition": "parameters",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Sync schema of the sync group.",
          "DefaultValueSample": "\"{{ schema }}\"",
          "DefaultValueTest": "",
          "SubOptions": [
            {
              "Name": "tables",
              "NameAlt": "tables",
              "Disposition": "default",
              "Type": "dict",
              "IsList": true,
              "Required": "False",
              "VariableValue": "None",
              "Documentation": "List of tables in sync group schema.",
              "DefaultValueSample": "\"{{ tables }}\"",
              "DefaultValueTest": "",
              "SubOptions": [
                {
                  "Name": "columns",
                  "NameAlt": "columns",
                  "Disposition": "default",
                  "Type": "dict",
                  "IsList": true,
                  "Required": "False",
                  "VariableValue": "None",
                  "Documentation": "List of columns in sync group schema.",
                  "DefaultValueSample": "\"{{ columns }}\"",
                  "DefaultValueTest": "",
                  "SubOptions": [
                    {
                      "Name": "quoted_name",
                      "NameAlt": "quoted_name",
                      "Disposition": "default",
                      "Type": "str",
                      "IsList": false,
                      "Required": "False",
                      "VariableValue": "None",
                      "Documentation": "Quoted name of sync group table column.",
                      "DefaultValueSample": "\"{{ quoted_name }}\"",
                      "DefaultValueTest": "",
                      "SubOptions": [],
                      "RequiredCount": 0
                    },
                    {
                      "Name": "data_size",
                      "NameAlt": "data_size",
                      "Disposition": "default",
                      "Type": "str",
                      "IsList": false,
                      "Required": "False",
                      "VariableValue": "None",
                      "Documentation": "Data size of the column.",
                      "DefaultValueSample": "\"{{ data_size }}\"",
                      "DefaultValueTest": "",
                      "SubOptions": [],
                      "RequiredCount": 0
                    },
                    {
                      "Name": "data_type",
                      "NameAlt": "data_type",
                      "Disposition": "default",
                      "Type": "str",
                      "IsList": false,
                      "Required": "False",
                      "VariableValue": "None",
                      "Documentation": "Data type of the column.",
                      "DefaultValueSample": "\"{{ data_type }}\"",
                      "DefaultValueTest": "",
                      "SubOptions": [],
                      "RequiredCount": 0
                    }
                  ],
                  "RequiredCount": 0
                },
                {
                  "Name": "quoted_name",
                  "NameAlt": "quoted_name",
                  "Disposition": "default",
                  "Type": "str",
                  "IsList": false,
                  "Required": "False",
                  "VariableValue": "None",
                  "Documentation": "Quoted name of sync group schema table.",
                  "DefaultValueSample": "\"{{ quoted_name }}\"",
                  "DefaultValueTest": "",
                  "SubOptions": [],
                  "RequiredCount": 0
                }
              ],
              "RequiredCount": 0
            },
            {
              "Name": "master_sync_member_name",
              "NameAlt": "master_sync_member_name",
              "Disposition": "default",
              "Type": "str",
              "IsList": false,
              "Required": "False",
              "VariableValue": "None",
              "Documentation": "Name of master sync member where the schema is from.",
              "DefaultValueSample": "\"{{ master_sync_member_name }}\"",
              "DefaultValueTest": "",
              "SubOptions": [],
              "RequiredCount": 0
            }
          ],
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "sync_group_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "sync_group_name"
          ]
        },
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "sync_group_name",
            "parameters"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "sync_group_name",
            "parameters"
          ]
        },
        {
          "Name": "delete",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "sync_group_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "sync_group_name"
          ]
        }
      ],
      "TestPrerequisitesModule": "",
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "SyncGroups",
      "ModuleOperationName": "sync_groups",
      "ObjectName": "SyncGroups"
    },
    {
      "ModuleName": "azure_rm_sql_syncgroups_facts",
      "ModuleNameAlt": "azure_rm_sql_syncgroups_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the database on which the sync group is hosted.",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "sync_group_name",
          "NameAlt": "sync_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the sync group.",
          "DefaultValueSample": "\"{{ sync_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "start_time",
          "NameAlt": "start_time",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Get logs generated after this time.",
          "DefaultValueSample": "\"{{ start_time }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "end_time",
          "NameAlt": "end_time",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Get logs generated before this time.",
          "DefaultValueSample": "\"{{ end_time }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "type",
          "NameAlt": "type",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The types of logs to retrieve.",
          "DefaultValueSample": "\"{{ type }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "continuation_token",
          "NameAlt": "continuation_token",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The continuation token for this operation.",
          "DefaultValueSample": "\"{{ continuation_token }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "location_name",
          "NameAlt": "location_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the region where the resource is located.",
          "DefaultValueSample": "\"{{ location_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "list_logs",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "sync_group_name",
            "start_time",
            "end_time",
            "type",
            "continuation_token"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "sync_group_name",
            "start_time",
            "end_time",
            "type"
          ]
        },
        {
          "Name": "list_hub_schemas",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "sync_group_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "sync_group_name"
          ]
        },
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "sync_group_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "sync_group_name"
          ]
        },
        {
          "Name": "list_by_database",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name"
          ]
        },
        {
          "Name": "list_sync_database_ids",
          "Options": [
            "location_name"
          ],
          "RequiredOptions": [
            "location_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "SyncGroups",
      "ModuleOperationName": "sync_groups",
      "ObjectName": "SyncGroups"
    },
    {
      "ModuleName": "azure_rm_sql_syncmembers",
      "ModuleNameAlt": "azure_rm_sql_syncmembers",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database on which the sync group is hosted.",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "sync_group_name",
          "NameAlt": "sync_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the sync group on which the sync member is hosted.",
          "DefaultValueSample": "\"{{ sync_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "sync_member_name",
          "NameAlt": "sync_member_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the sync member.",
          "DefaultValueSample": "\"{{ sync_member_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "parameters",
          "NameAlt": "parameters",
          "Disposition": "dictionary",
          "Type": "dict",
          "IsList": false,
          "Required": "False",
          "VariableValue": "dict()",
          "Documentation": "The requested sync member resource state.",
          "DefaultValueSample": "\"{{ parameters }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_type",
          "NameAlt": "database_type",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Database type of the sync member. Possible values include: 'AzureSqlDatabase', 'SqlServerDatabase'",
          "DefaultValueSample": "\"{{ database_type }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "sync_agent_id",
          "NameAlt": "sync_agent_id",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "ARM resource id of the sync agent in the sync member.",
          "DefaultValueSample": "\"{{ sync_agent_id }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "sql_server_database_id",
          "NameAlt": "sql_server_database_id",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "SQL Server database id of the sync member.",
          "DefaultValueSample": "\"{{ sql_server_database_id }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Server name of the member database in the sync member",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Database name of the member database in the sync member.",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "user_name",
          "NameAlt": "user_name",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "User name of the member database in the sync member.",
          "DefaultValueSample": "\"{{ user_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "password",
          "NameAlt": "password",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Password of the member database in the sync member.",
          "DefaultValueSample": "\"{{ password }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        },
        {
          "Name": "sync_direction",
          "NameAlt": "sync_direction",
          "Disposition": "parameters",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Sync direction of the sync member. Possible values include: 'Bidirectional', 'OneWayMemberToHub', 'OneWayHubToMember'",
          "DefaultValueSample": "\"{{ sync_direction }}\"",
          "DefaultValueTest": "",
          "SubOptions": [],
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "sync_group_name",
            "sync_member_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "sync_group_name",
            "sync_member_name"
          ]
        },
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "sync_group_name",
            "sync_member_name",
            "parameters"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "sync_group_name",
            "sync_member_name",
            "parameters"
          ]
        },
        {
          "Name": "delete",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "sync_group_name",
            "sync_member_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "sync_group_name",
            "sync_member_name"
          ]
        }
      ],
      "TestPrerequisitesModule": "",
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "SyncMembers",
      "ModuleOperationName": "sync_members",
      "ObjectName": "SyncMembers"
    },
    {
      "ModuleName": "azure_rm_sql_syncmembers_facts",
      "ModuleNameAlt": "azure_rm_sql_syncmembers_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database on which the sync group is hosted.",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "sync_group_name",
          "NameAlt": "sync_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the sync group on which the sync member is hosted.",
          "DefaultValueSample": "\"{{ sync_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "sync_member_name",
          "NameAlt": "sync_member_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the sync member.",
          "DefaultValueSample": "\"{{ sync_member_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "sync_group_name",
            "sync_member_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "sync_group_name",
            "sync_member_name"
          ]
        },
        {
          "Name": "list_member_schemas",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "sync_group_name",
            "sync_member_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "sync_group_name",
            "sync_member_name"
          ]
        },
        {
          "Name": "list_by_sync_group",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name",
            "sync_group_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name",
            "sync_group_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "SyncMembers",
      "ModuleOperationName": "sync_members",
      "ObjectName": "SyncMembers"
    },
    {
      "ModuleName": "azure_rm_sql_virtualnetworkrules",
      "ModuleNameAlt": "azure_rm_sql_virtualnetworkrules",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "virtual_network_rule_name",
          "NameAlt": "virtual_network_rule_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the virtual network rule.",
          "DefaultValueSample": "\"{{ virtual_network_rule_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "virtual_network_subnet_id",
          "NameAlt": "virtual_network_subnet_id",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The ARM resource id of the virtual network subnet.",
          "DefaultValueSample": "\"{{ virtual_network_subnet_id }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "ignore_missing_vnet_service_endpoint",
          "NameAlt": "ignore_missing_vnet_service_endpoint",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "Create firewall rule before the virtual network has vnet service endpoint enabled.",
          "DefaultValueSample": "\"{{ ignore_missing_vnet_service_endpoint }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "virtual_network_rule_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "virtual_network_rule_name"
          ]
        },
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "virtual_network_rule_name",
            "virtual_network_subnet_id",
            "ignore_missing_vnet_service_endpoint"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "virtual_network_rule_name",
            "virtual_network_subnet_id"
          ]
        },
        {
          "Name": "delete",
          "Options": [
            "resource_group_name",
            "server_name",
            "virtual_network_rule_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "virtual_network_rule_name"
          ]
        }
      ],
      "TestPrerequisitesModule": "",
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "VirtualNetworkRules",
      "ModuleOperationName": "virtual_network_rules",
      "ObjectName": "VirtualNetworkRules"
    },
    {
      "ModuleName": "azure_rm_sql_virtualnetworkrules_facts",
      "ModuleNameAlt": "azure_rm_sql_virtualnetworkrules_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "virtual_network_rule_name",
          "NameAlt": "virtual_network_rule_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the virtual network rule.",
          "DefaultValueSample": "\"{{ virtual_network_rule_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "virtual_network_rule_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "virtual_network_rule_name"
          ]
        },
        {
          "Name": "list_by_server",
          "Options": [
            "resource_group_name",
            "server_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "VirtualNetworkRules",
      "ModuleOperationName": "virtual_network_rules",
      "ObjectName": "VirtualNetworkRules"
    },
    {
      "ModuleName": "azure_rm_sql_databaseoperations_facts",
      "ModuleNameAlt": "azure_rm_sql_databaseoperations_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "database_name",
          "NameAlt": "database_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the database.",
          "DefaultValueSample": "\"{{ database_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "list_by_database",
          "Options": [
            "resource_group_name",
            "server_name",
            "database_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "database_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "DatabaseOperations",
      "ModuleOperationName": "database_operations",
      "ObjectName": "DatabaseOperations"
    },
    {
      "ModuleName": "azure_rm_sql_serverdnsaliases",
      "ModuleNameAlt": "azure_rm_sql_serverdnsaliases",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server that the alias is pointing to.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "dns_alias_name",
          "NameAlt": "dns_alias_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server DNS alias.",
          "DefaultValueSample": "\"{{ dns_alias_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "dns_alias_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "dns_alias_name"
          ]
        },
        {
          "Name": "create_or_update",
          "Options": [
            "resource_group_name",
            "server_name",
            "dns_alias_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "dns_alias_name"
          ]
        },
        {
          "Name": "delete",
          "Options": [
            "resource_group_name",
            "server_name",
            "dns_alias_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "dns_alias_name"
          ]
        }
      ],
      "TestPrerequisitesModule": "",
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "ServerDnsAliases",
      "ModuleOperationName": "server_dns_aliases",
      "ObjectName": "ServerDnsAliases"
    },
    {
      "ModuleName": "azure_rm_sql_serverdnsaliases_facts",
      "ModuleNameAlt": "azure_rm_sql_serverdnsaliases_facts",
      "Options": [
        {
          "Name": "resource_group_name",
          "NameAlt": "resource_group_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "DefaultValueSample": "\"{{ resource_group_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "server_name",
          "NameAlt": "server_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "True",
          "VariableValue": "None",
          "Documentation": "The name of the server that the alias is pointing to.",
          "DefaultValueSample": "\"{{ server_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        },
        {
          "Name": "dns_alias_name",
          "NameAlt": "dns_alias_name",
          "Disposition": "default",
          "Type": "str",
          "IsList": false,
          "Required": "False",
          "VariableValue": "None",
          "Documentation": "The name of the server DNS alias.",
          "DefaultValueSample": "\"{{ dns_alias_name }}\"",
          "DefaultValueTest": "",
          "SubOptions": null,
          "RequiredCount": 0
        }
      ],
      "Methods": [
        {
          "Name": "get",
          "Options": [
            "resource_group_name",
            "server_name",
            "dns_alias_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name",
            "dns_alias_name"
          ]
        },
        {
          "Name": "list_by_server",
          "Options": [
            "resource_group_name",
            "server_name"
          ],
          "RequiredOptions": [
            "resource_group_name",
            "server_name"
          ]
        }
      ],
      "TestPrerequisitesModule": null,
      "AssertStateVariable": "state",
      "AssertStateExpectedValue": "Ready",
      "ModuleOperationNameUpper": "ServerDnsAliases",
      "ModuleOperationName": "server_dns_aliases",
      "ObjectName": "ServerDnsAliases"
    }
  ],
  "Namespace": "sql",
  "NamespaceUpper": "sql",
  "Name": "SqlManagementClient",
  "Operations": [
    "BackupLongTermRetentionPolicies[ get create_or_update MAIN FACTS ]",
    "BackupLongTermRetentionVaults[ get create_or_update MAIN FACTS ]",
    "RestorePoints[ list_by_database FACTS ]",
    "RecoverableDatabases[ get list_by_server FACTS ]",
    "RestorableDroppedDatabases[ get list_by_server FACTS ]",
    "Capabilities[ list_by_location FACTS ]",
    "ServerConnectionPolicies[ create_or_update get MAIN FACTS ]",
    "DatabaseThreatDetectionPolicies[ get create_or_update MAIN FACTS ]",
    "DataMaskingPolicies[ create_or_update get MAIN FACTS ]",
    "DataMaskingRules[ create_or_update list_by_database MAIN FACTS ]",
    "FirewallRules[ create_or_update delete get list_by_server MAIN FACTS ]",
    "GeoBackupPolicies[ create_or_update get list_by_database MAIN FACTS ]",
    "Databases[ import_method create_import_operation export list_metrics list_metric_definitions pause resume create_or_update update delete get list_by_server get_by_elastic_pool list_by_elastic_pool get_by_recommended_elastic_pool list_by_recommended_elastic_pool MAIN FACTS ]",
    "ElasticPools[ list_metrics list_metric_definitions create_or_update update delete get list_by_server MAIN FACTS ]",
    "ReplicationLinks[ delete get failover failover_allow_data_loss list_by_database FACTS ]",
    "ServerAzureADAdministrators[ create_or_update delete get list_by_server MAIN FACTS ]",
    "ServerCommunicationLinks[ delete get create_or_update list_by_server MAIN FACTS ]",
    "ServiceObjectives[ get list_by_server FACTS ]",
    "Servers[ check_name_availability list list_by_resource_group get create_or_update delete update MAIN FACTS ]",
    "ElasticPoolActivities[ list_by_elastic_pool FACTS ]",
    "ElasticPoolDatabaseActivities[ list_by_elastic_pool FACTS ]",
    "RecommendedElasticPools[ get list_by_server list_metrics FACTS ]",
    "ServiceTierAdvisors[ get list_by_database FACTS ]",
    "TransparentDataEncryptions[ create_or_update get MAIN FACTS ]",
    "TransparentDataEncryptionActivities[ list_by_configuration FACTS ]",
    "ServerUsages[ list_by_server FACTS ]",
    "DatabaseUsages[ list_by_database FACTS ]",
    "DatabaseBlobAuditingPolicies[ get create_or_update MAIN FACTS ]",
    "EncryptionProtectors[ list_by_server get create_or_update MAIN FACTS ]",
    "FailoverGroups[ get create_or_update delete update list_by_server failover force_failover_allow_data_loss MAIN FACTS ]",
    "Operations[ list ]",
    "ServerKeys[ list_by_server get create_or_update delete MAIN FACTS ]",
    "SyncAgents[ get create_or_update delete list_by_server generate_key list_linked_databases MAIN FACTS ]",
    "SyncGroups[ list_sync_database_ids refresh_hub_schema list_hub_schemas list_logs cancel_sync trigger_sync get create_or_update delete update list_by_database MAIN FACTS ]",
    "SyncMembers[ get create_or_update delete update list_by_sync_group list_member_schemas refresh_member_schema MAIN FACTS ]",
    "VirtualNetworkRules[ get create_or_update delete list_by_server MAIN FACTS ]",
    "DatabaseOperations[ cancel list_by_database FACTS ]",
    "ServerDnsAliases[ get create_or_update delete list_by_server acquire MAIN FACTS ]"
  ]
}
